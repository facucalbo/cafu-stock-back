{"version":3,"file":"874.index.js","mappings":"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","sources":["webpack://snyk/./node_modules/env-paths/index.js","webpack://snyk/./src/cli/commands/describe.ts","webpack://snyk/./src/cli/commands/process-command-args.ts"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst os = require('os');\n\nconst homedir = os.homedir();\nconst tmpdir = os.tmpdir();\nconst {env} = process;\n\nconst macos = name => {\n\tconst library = path.join(homedir, 'Library');\n\n\treturn {\n\t\tdata: path.join(library, 'Application Support', name),\n\t\tconfig: path.join(library, 'Preferences', name),\n\t\tcache: path.join(library, 'Caches', name),\n\t\tlog: path.join(library, 'Logs', name),\n\t\ttemp: path.join(tmpdir, name)\n\t};\n};\n\nconst windows = name => {\n\tconst appData = env.APPDATA || path.join(homedir, 'AppData', 'Roaming');\n\tconst localAppData = env.LOCALAPPDATA || path.join(homedir, 'AppData', 'Local');\n\n\treturn {\n\t\t// Data/config/cache/log are invented by me as Windows isn't opinionated about this\n\t\tdata: path.join(localAppData, name, 'Data'),\n\t\tconfig: path.join(appData, name, 'Config'),\n\t\tcache: path.join(localAppData, name, 'Cache'),\n\t\tlog: path.join(localAppData, name, 'Log'),\n\t\ttemp: path.join(tmpdir, name)\n\t};\n};\n\n// https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\nconst linux = name => {\n\tconst username = path.basename(homedir);\n\n\treturn {\n\t\tdata: path.join(env.XDG_DATA_HOME || path.join(homedir, '.local', 'share'), name),\n\t\tconfig: path.join(env.XDG_CONFIG_HOME || path.join(homedir, '.config'), name),\n\t\tcache: path.join(env.XDG_CACHE_HOME || path.join(homedir, '.cache'), name),\n\t\t// https://wiki.debian.org/XDGBaseDirectorySpecification#state\n\t\tlog: path.join(env.XDG_STATE_HOME || path.join(homedir, '.local', 'state'), name),\n\t\ttemp: path.join(tmpdir, username, name)\n\t};\n};\n\nconst envPaths = (name, options) => {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError(`Expected string, got ${typeof name}`);\n\t}\n\n\toptions = Object.assign({suffix: 'nodejs'}, options);\n\n\tif (options.suffix) {\n\t\t// Add suffix to prevent possible conflict with native apps\n\t\tname += `-${options.suffix}`;\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\treturn macos(name);\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows(name);\n\t}\n\n\treturn linux(name);\n};\n\nmodule.exports = envPaths;\n// TODO: Remove this for the next major release\nmodule.exports.default = envPaths;\n","import { MethodArgs } from '../args';\nimport { processCommandArgs } from './process-command-args';\nimport * as legacyError from '../../lib/errors/legacy-errors';\nimport {\n  DCTL_EXIT_CODES,\n  parseDriftAnalysisResults,\n  runDriftCTL,\n} from '../../lib/iac/drift';\nimport { getIacOrgSettings } from './test/iac-local-execution/org-settings/get-iac-org-settings';\nimport { UnsupportedEntitlementCommandError } from './test/iac-local-execution/assert-iac-options-flag';\nimport config from '../../lib/config';\nimport { addIacDriftAnalytics } from './test/iac-local-execution/analytics';\nimport * as analytics from '../../lib/analytics';\n\nexport default async (...args: MethodArgs): Promise<any> => {\n  const { options } = processCommandArgs(...args);\n\n  // Ensure that this describe command can only be runned when using `snyk iac describe`\n  // Avoid `snyk describe` direct usage\n  if (options.iac != true) {\n    return legacyError('describe');\n  }\n\n  // Ensure that we are allowed to run that command\n  // by checking the entitlement\n  const orgPublicId = options.org ?? config.org;\n  const iacOrgSettings = await getIacOrgSettings(orgPublicId);\n  if (!iacOrgSettings.entitlements?.iacDrift) {\n    throw new UnsupportedEntitlementCommandError('drift', 'iacDrift');\n  }\n\n  try {\n    const describe = await runDriftCTL({\n      options: { kind: 'describe', ...options },\n    });\n    analytics.add('iac-drift-exit-code', describe.code);\n    if (describe.code === DCTL_EXIT_CODES.EXIT_ERROR) {\n      process.exitCode = describe.code;\n      throw new Error();\n    }\n\n    // Parse analysis JSON and add to analytics\n    const analysis = parseDriftAnalysisResults(describe.stdout);\n    addIacDriftAnalytics(analysis, options);\n\n    const fmtResult = await runDriftCTL({\n      options: { kind: 'fmt', ...options },\n      input: describe.stdout,\n    });\n    process.stdout.write(fmtResult.stdout);\n    process.exitCode = describe.code;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n","import { Options } from '../../lib/types';\n\nexport function processCommandArgs<CommandOptions>(\n  ...args\n): { paths: string[]; options: Options & CommandOptions } {\n  let options = ({} as any) as Options & CommandOptions;\n\n  if (typeof args[args.length - 1] === 'object') {\n    options = (args.pop() as any) as Options & CommandOptions;\n  }\n  args = args.filter(Boolean);\n\n  // For repository scanning, populate with default path (cwd) if no path given\n  if (args.length === 0 && !options.docker) {\n    args.unshift(process.cwd());\n  }\n\n  return { options, paths: args };\n}\n"],"names":[],"sourceRoot":""}